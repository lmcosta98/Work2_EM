
########################################
########################################
#
#  Exploratory and Descriptive Analysis
#
########################################
########################################



#Here we import the data set and name it dataas with the help of the read command

dataas <- read.csv("C:/Users/Tijah Bah/Downloads/happiness-cantril-ladder.csv", header=FALSE) 

View(dataas)   # Here we view the data to see the structure of it









## Here we extract the rows and columns of the countries we are interested with 

ghana_satis =  dataas[730:746, c(4)]    # we extracted the rows related to Ghana and the column related to life satisfaction
ghana_satis                              #We see the the life satisfaction index for this country
ghana_satis_unlist=unlist(dataas[730:746, c(4)])  # We used unlist () function to convert the list of life satisfaction  to vector.
ghana_satis_unlist

ghana_year =  dataas[730:746,c(3)]     # we extracted the rows related to Ghana and the column related to years
ghana_year                               #We see the the years related to life satisfaction for Ghana
ghana_year_unlist=unlist(dataas[730:746,c(3)])
ghana_year_unlist

Ghanaa <-c(4.53501987457275,5.22014808654785,4.9651346206665,4.1976957321167,4.60625171661377,7.03781652450562,
          6.66000366210938,7.1402826309204,6.98099899291992,6.54689693450928,6.37481737136841,6.3329291343689,
          5.00369310379028,4.96680974960327,5.31948328018188,5.08839988708496,4.87200021743774)  # we make a vector of life satisfaction
round(Ghanaa, digits = 4)  # We round up the numbers for easy reading 

Ghana<-c(4.5350, 5.2201, 4.9651, 4.1977, 4.6063, 7.0378, 6.6600, 7.1403, 6.9810,
         6.5469, 6.3748, 6.3329, 5.0037, 4.9668, 5.3195, 5.08804, 4.8720)  # We store the rounded life satisfaction index in a vector and called it Ghana.
Ghana

# The same step are followed for the rest of the countries.

brasil_satis =  dataas[252:268, c(4)]
brasil_satis
brasil_satis_unlist=unlist(dataas[252:268, c(4)])
brasil_satis_unlist


brasil_year =  dataas[252:268,c(3)]
brasil_year
brasil_year_unlist=unlist(dataas[252:268,c(3)])
brasil_year_unlist



Brasill<-c(6.6367712020874,6.3206729888916,6.69142484664917,7.00083160400391,6.83733129501343,7.03781652450562,
           6.66000366210938,7.14028263092041,6.98099899291992,6.54689693450928,6.3748173713684,6.3329291343689,
           6.19092178344727,6.45114898681641,6.10971784591675,6.33010005950928,6.292799949646)

round(Brasill, digits = 4)
Brasil<-c(6.6368, 6.3207, 6.6914, 7.0008, 6.8373, 7.0378, 6.6600, 7.1403, 6.9810, 6.5469,
          6.3748, 6.3329, 6.1909, 6.4511, 6.1097, 6.3301,6.2928)





newzealand_satis =  dataas[1423:1438, c(4)]
newzealand_satis
newzealand_satis_unlist=unlist(dataas[1423:1438, c(4)])
newzealand_satis_unlist


newzealand_year =  dataas[1423:1438,c(3)]
newzealand_year
newzealand_year_unlist=unlist(dataas[1423:1438,c(3)])
newzealand_year_unlist


New_Zealandd<-c(7.3050141334533,7.60417318344116,7.38117074966431,7.22375631332397,7.19063806533813,7.24962997436523,
                7.28015184402466,7.30589246749878,7.41812086105347,7.22568798065186,7.32718276977539,7.370285987854, 
                7.20517444610596,7.25738191604614,7.2765998840332,7.19980001449585)
round(New_Zealandd, digits = 4)

NewZealand<-c(7.3050, 7.6042, 7.3812, 7.3025, 7.2238, 7.1906, 7.2496, 7.2802,7.3059, 7.4181, 7.2257, 7.3272, 7.3703, 7.2052, 7.2574, 7.2766, 7.1998)

# This country has a missing value in 2007 we took the average of 2008 and 2006 to to obtain the value 
# 2006 is 7.3812 and 2008 is 7.2238 and the average is (7.3812+7.2238)/2=7.3025
# all missing valye will be obtained in such a way.


canada_satis =  dataas[338:354, c(4)]
canada_satis
canada_satis_unlist=unlist(dataas[338:354, c(4)])
canada_satis_unlist

canada_year =  dataas[338:354,c(3)]
canada_year
canada_year_unlist=unlist(dataas[338:354,c(3)])
canada_year_unlist

Canadaa<-c(7.41804838180542,7.48175287246704,7.48560380935669,7.48782444000244,7.65034627914429,7.42605352401733,
           7.41514444351196,7.59379386901855,7.30425786972046,7.41277265548706,7.24484586715698,7.41486835479736,
           7.17549657821655,7.10907649993896,7.02490472793579,7.10330009460449,7.02510023117065)
round(Canadaa, digits = 4)

Canada<-c(7.4180, 7.4818, 7.4856, 7.4878, 7.6503, 7.4261, 7.4151, 7.5938, 7.3043, 7.4128, 7.2448, 7.4149, 7.1755, 7.1091,
          7.0249, 7.1033,7.0251)

japan_satis =  dataas[978:994, c(4)]
japan_satis
japan_satis_unlist=unlist(dataas[978:994, c(4)])
japan_satis_unlist



japan_year =  dataas[978:994,c(3)]
japan_year
japan_year_unlist=unlist(dataas[978:994,c(3)])
japan_year_unlist

Japann <-c(6.51581716537476,6.23819780349731,5.9106793403625,5.84499931335449,6.05675268173218,6.26279354095459,
           5.96821641921997,5.95936155319214,5.92262077331543,5.87968444824219,5.95465087890625,5.9106764793396, 
           5.79357528686523,5.90803909301758,6.1179633140564,5.94049978256226,6.03889989852905)
round(Japann, digits = 4)

Japan<-c(6.5158, 6.2382, 5.9107, 5.8450, 6.0568, 6.2628, 5.9682, 5.9594, 5.9226, 5.8797, 5.9547, 5.9107,5.7936, 5.9080, 6.1180, 5.9405,6.0389)

por_satis =  dataas[1635:1649, c(4)]
por_satis

por_satis_unlist=unlist(dataas[1635:1649, c(4)])
por_satis_unlist 

Portugall<-c(5.40524625778198,5.716966629028,5.0945258140564,5.2199978828430,4.99396228790283,5.15768814086914,
             5.12691164016724,5.08086633682251,5.44663715362549,5.71149921417236,5.91982269287109,6.09547328948975,
             5.76779222488403,5.92899990081787,6.01630020141602)

round(Portugall, digits = 4)
por_satis =  dataas[1635:1649, c(3)]
por_satis
por_satis_unlist=unlist(dataas[1635:1649, c(4)])
por_satis_unlist 


por_year =  dataas[1635:1649,c(3)]
por_year
por_year_unlist=unlist(dataas[1635:1649,c(3)])
por_year_unlist

Portugal<-c(5.4052,5.5611, 5.7170,5.4056, 5.0945, 5.2200, 4.9940, 5.1577, 5.1269, 5.0809, 5.4466, 5.7115, 5.9198, 6.0955, 5.7678,
            5.9290, 6.0163)
# Portugal has a missing value in 2005 and we obtained it as (5.4052 +5.7170)/2= 5.5611
# Portugal has a missing value in 2007 and we obtained it as (5.0945 +5.7170)/2= 5.4056



beni_satis =  dataas[189:202, c(4)]
beni_satis

beni_satis_unlist=unlist(dataas[189:202, c(4)])
beni_satis_unlist 

beni_satis_unlist=unlist(dataas[189:202, c(3)])
beni_satis_unlist 
Beninee<-c(3.32980155944824,3.66713953018188,3.87027955055237,3.19346880912781,3.4794127941131,3.347419261937,
           3.62466430664062,4.00735759735107,4.85318088531494,5.81982707977295,4.97636079788208,4.40774583816528,
           5.0451998710632, 4.62319993972778)

round(Beninee, digits = 4)

# Missing data in 2005 will be (3.3298+3.6671)/2= 3.49845 
# Missing data in 2007 and 2008 will be (3.8703+3.6671)/2= 3.7687
  Benine<-c(3.3298,3.49845, 3.6671,3.7687,3.7687, 3.8703, 3.1935, 3.4794, 3.3474, 3.6247, 4.0074, 4.8532, 5.8198, 4.9764, 4.4077, 5.0452, 4.6232)

  Den_satis =  dataas[527:543, c(4)]
  Den_satis
  
  Den_satis_unlist=unlist(dataas[527:543, c(4)])
  Den_satis_unlist 

  Denmarkk<-c(8.01893424987793,7.83423328399658,7.97089195251465,7.68335866928101,7.77051544189453,7.78823184967041,
              7.51990938186646,7.58860683441162,7.50755929946899,7.5144248008728,7.5577826499939,7.59370231628418,
              7.64878559112549,7.69300317764282,7.5146312713623,7.61950016021729,7.63619995117188)  
  round(Denmarkk, digits = 4)
  
  Denmark<-c(8.0189, 7.8342, 7.9709, 7.6834, 7.7705, 7.7882, 7.5199, 7.5886, 7.5076, 7.5144, 7.5578, 7.5937, 7.6488, 7.6930, 7.5146, 7.6195, 7.6362)
  
  
  India_satis =  dataas[858:874, c(4)]
  India_satis
  
  India_satis_unlist=unlist(dataas[527:543, c(4)])
  India_satis_unlist 
  
  Indiann<-c(5.34825897216797,5.0267934799194,5.14583301544189,4.52151775360107,4.98927736282349,4.63487148284912,
             4.72014665603638,4.42778873443604,4.42437934875488,4.34207916259766,4.17917728424072,4.04611110687256,
             3.81806874275208,3.24876976013184,4.22528123855591,3.8189001083374,3.7771000862121)
  round(Indiann, digits = 4)
India<-c(5.3483, 5.0268, 5.1458, 4.5215, 4.9893, 4.6349, 4.7201, 4.4278, 4.4244, 4.3421, 4.1792, 4.0461, 3.8181, 3.2488, 4.2253, 3.8189,3.7771)


us_satis =  dataas[2117:2133, c(4)]
us_satis

us_satis_unlist=unlist(dataas[2117:2133, c(4)])
us_satis_unlist

uss<-c(7.18179368972778,7.51268768310547,7.28038597106934,7.15803241729736,7.16361618041992,7.1151385307312,
       7.02622699737549,7.24928522109985,7.15111446380615,6.86394691467285,6.80359983444214,6.99175930023193,
       6.8826847076416,6.9437012672424,7.02808809280396,6.95149993896484,6.97679996490479)
round(uss, digits = 4)
USA<-c(7.1818, 7.5127, 7.2804, 7.1580, 7.1636, 7.1151, 7.0262, 7.2493, 7.1511, 6.8639, 6.8036, 6.9918, 6.8827, 6.9437, 7.0281, 6.9515, 6.9768)



argentina_satis =  dataas[45:61, c(4)]
argentina_satis

argentina_satis_unlist=unlist(dataas[45:61, c(4)])
argentina_satis_unlist
 Argentinaa<-c( 6.31292533874512,6.07315826416016,5.96103429794312,6.42413330078125,6.44106721878052,6.77580547332764, 
                6.46838712692261,6.58226013183594,6.67111444473267,6.69713068008423,6.42722129821777,6.03933000564575,
                5.79279661178589,6.08556079864502,5.90056705474854,5.92929983139038,5.96700000762939)
 round(Argentinaa, digits = 4)

Argentina<-c(6.3129, 6.0732, 5.9610, 6.4241, 6.4411, 6.7758, 6.4684, 6.5823, 6.6711, 6.6971,6.4272, 6.0393, 5.7928, 6.0856, 5.9006, 5.9293,5.9670)


austrial_satis =  dataas[78:93, c(4)]
austrial_satis

austrial_satis_unlist=unlist(dataas[78:93, c(4)])
austrial_satis_unlist

Austriall<-c(7.34068822860718,7.28539085388184,7.25375747680664,7.4500470161438,7.40561628341675,7.19558572769165,
             7.36416912078857,7.28855037689209,7.30906057357788,7.25008010864258,7.25703763961792,7.17699337005615,
             7.233994960784,7.13736772537231,7.18349981307983,7.16209983825684)
round(Austriall, digits = 4)


austrial_satis =  dataas[78:93, c(3)]
austrial_satis

austrial_satis_unlist=unlist(dataas[78:93, c(3)])
austrial_satis_unlist
# there is a missing data on 2007 which will (7.2538+7.4500)/2= 7.3519
# Since the data containe 2003 we assumed it was a data entry error and it should be 2004
Austrial<-c(7.3407, 7.2854, 7.2538,7.3519, 7.4500, 7.4056, 7.1956, 7.3642, 7.2886, 7.3091, 7.2501, 7.2570, 7.1770, 7.2340, 7.1374, 7.1835, 7.1621)



bostuwana_satis =  dataas[238:251, c(4)]
bostuwana_satis

bostuwana_satis_unlist=unlist(dataas[238:251, c(4)])
bostuwana_satis_unlist

bostuwanaa<-c(4.73936700820923,5.45114707946777,3.55302023887634,3.51992106437683,4.83593893051147,4.12829875946045,
              4.03119707107544,3.76196479797363,3.49893665313721,3.50488114356995,3.46136569976807,3.47108483314514,
              3.46650004386902, 3.4711000919342 )

round(bostuwanaa, digits = 4)

bostuwana_satis =  dataas[238:251, c(3)]
bostuwana_satis

bostuwana_satis_unlist=unlist(dataas[238:251, c(3)])
bostuwana_satis_unlist

#Missing value in 2005 which is (4.7394+5.4511)/2=5.0953

#Missing value in 2007 which is (3.55304+5.4511)/2=4.5021

#Missing value in 2018 which is (3.4711+3.4665)/2=3.4688


Bostuwana<-c(4.7394,5.0953, 5.4511, 3.5530,4.5021, 3.5199, 4.8359, 4.1283, 4.0312, 3.7620, 3.4989, 3.5049, 3.4614, 3.4711,3.4688, 3.4665, 3.4711)


estonia_satis =  dataas[616:631, c(4)]
estonia_satis

estonia_satis_unlist=unlist(dataas[616:631, c(4)])
estonia_satis_unlist


Estonia<-c(5.37105464935303,5.33204412460327,5.45193767547607,5.1377387046814,5.48681974411011,5.36392784118652,
           5.36744594573975,5.55598258972168,5.62890863418579,5.6496753692627,5.93839597702026,6.09130239486694,
           6.03464126586914,6.45256376266479,6.18879985809326,6.3407998085022)

round(Estonia, digits = 4)

estonia_satis =  dataas[616:631, c(3)]
estonia_satis

estonia_satis_unlist=unlist(dataas[616:631, c(3)])
estonia_satis_unlist
#Missing value in 2008 and (5.1377+5.4868)/2=5.3123

Estonia<-c(5.3711, 5.3320, 5.4519, 5.1377, 5.3123, 5.4868, 5.3639, 5.3674, 5.5560, 5.6289, 5.6497, 5.9384, 6.0913, 6.0346, 6.4526, 6.1888, 6.3408)


indonisia_satis =  dataas[875:890, c(4)]
indonisia_satis

indonisia_satis_unlist=unlist(dataas[875:890, c(4)])
indonisia_satis_unlist

Indonisiaa<-c(4.9469780921936,5.10121393203735,4.81530952453613,5.472361087799,5.45729923248291,5.17260837554932,
              5.36777400970459,5.29223775863647,5.59737539291382,5.042799949646,5.13632535934448,5.09840154647827,
              5.34029579162598,5.34651279449463,5.34450006484985,5.23960018157959)

round(Indonisiaa, digits = 4)

indonisia_satis =  dataas[875:890, c(3)]
indonisia_satis

indonisia_satis_unlist=unlist(dataas[875:890, c(3)])
indonisia_satis_unlist

# missing data in 2018 and is (5.3465+5.3403)/2= 5.3434

Indonisia<-c( 4.9470, 5.1012, 4.8153, 5.4724, 5.4573, 5.1726, 5.3678, 5.2922, 5.5974, 5.0428, 5.1363, 5.0984, 5.3403, 5.3465,5.3434, 5.3445, 5.2396)

dev.off()

mexico_satis =  dataas[1286:1302, c(4)]
mexico_satis

mexico_satis_unlist=unlist(dataas[1286:1302, c(4)])
mexico_satis_unlist

Mexicoo<-c(6.58065795898438,6.52537822723389,6.82903623580933,6.96281909942627,6.8023886680603,6.90951538085938,
           7.32018518447876,7.44254636764526,6.67983102798462,6.23628711700439,6.82417297363281,6.41029930114746,6.54957866668701,6.43194532394409,5.96422100067139,6.31680011749268,6.12760019302368)


round(Mexicoo, digits = 4)

Mexico<-c( 6.5807, 6.5254, 6.8290, 6.9628, 6.8024, 6.9095, 7.3202, 7.4425, 6.6798, 6.2363, 6.8242, 6.4103, 6.5496, 6.4319, 5.9642, 6.3168,6.1276)


colombia_satis =  dataas[410:426, c(4)]
colombia_satis

colombia_satis_unlist=unlist(dataas[410:426, c(4)])
colombia_satis_unlist

Colombiaa<-c(6.02494287490845,6.13841152191162,6.16839504241943,6.27160453796387,6.40811347961426,6.46395254135132,
             6.37487983703613,6.60655069351196,6.44878911972046,6.38757181167603,6.23371505737305,6.15734195709229,
             5.98351240158081,6.35029792785645,5.70917510986328,6.01240015029907,5.78060007095337)

round(Colombiaa, digits = 4)
 Colombia<-c( 6.0249, 6.1384, 6.1684, 6.2716, 6.4081, 6.4640, 6.3749, 6.6066, 6.4488, 6.3876, 6.2337, 6.1573, 5.9835, 6.3503, 5.7092, 6.0124,  5.7806)


 burkinafaso_satis =  dataas[283:297, c(4)]
 burkinafaso_satis
 
 #burkinafaso_unlist_unlist=(dataas[283:297, c(4)])
 #burkinafaso_satis_unlist
 
 
 Burkinafasoo <-c( 3.80149078369141,4.01713037490845,3.84643888473511,4.03556060791016,4.78536748886108,3.95500802993774,
                  3.32594966888428,3.48134779930115,4.41893005371094,4.20563459396362,4.64689111709595,4.92723608016968,
                  4.74089288711548,4.83379983901978,4.67049980163574)
 
 round(Burkinafasoo, digits = 4)
 
 
 burkinafaso_satis =  dataas[283:297, c(3)]
 burkinafaso_satis
 
 #Missing value in 2007 so we do average (3.8464+ 4.0356)/2=3.941
 # missing value in 2018 and the average is (4.7409+4.8338)/2=4.6214
 
 Burkinafasso <-c(3.8015, 4.0171, 3.8464, 3.941, 4.0356, 4.7854, 3.9550, 3.3259, 3.4813, 4.4189, 4.2056, 4.6469, 4.9272, 4.7409,4.6214, 4.8338, 4.6705)
 

 franch_satis =  dataas[663:679, c(4)]
 franch_satis
 
 Franchh<-c( 7.09339284896851,6.58270025253296,7.00806474685669,6.28349828720093,6.79790115356445,6.9591851234436,
             6.64936542510986,6.66712141036987,6.46686792373657,6.35762500762939,6.47520875930786,6.63522243499756,
             6.66590356826782,6.68964433670044,6.71411180496216,6.68989992141724,6.68669986724854)
 
 
 round(Franchh, digits = 4)
 
 Franch<-c(7.0934, 6.5827, 7.0081, 6.2835, 6.7979, 6.9592, 6.6494, 6.6671, 6.4669, 6.3576, 6.4752, 6.6352, 6.6659, 6.6896, 6.7141, 6.6899, 6.6867)
 
 
 Kazak_satis =  dataas[1012:1028, c(4)]
 Kazak_satis
 
 
 Kazakk<-c(5.47594833374023,5.71855354309082,5.88641977310181,5.38256311416626,5.51428651809692,5.73566293716431,
           5.75946950912476,5.83548307418823,5.97009754180908,5.94999504089355,5.53355169296265,5.88235139846802,
           6.00763607025146,6.27226829528809,6.16826915740967,6.15180015563965,6.23409986495972)
 
 
 round(Kazakk, digits = 4)
 
 Kazakstan<-c(5.4759, 5.7186, 5.8864, 5.3826, 5.5143, 5.7357, 5.7595, 5.8355, 5.9701, 5.9500, 5.5336, 5.8824, 6.0076, 6.2723, 6.1683, 6.1518,6.2341)
 
 
 
 rica_satis =  dataas[447:462, c(4)]
 rica_satis
 
 
 Costaricaa<-c( 7.08246517181396,7.43213224411011,6.85067987442017,7.61492872238159,7.27105379104614,7.22888851165771,
                7.27225017547607,7.15800046920776,7.24708604812622,6.85400438308716,7.13561773300171,7.22518157958984,
                7.14107465744019,6.99761867523193,7.0693998336792,6.58199977874756)
 
 round(Costaricaa, digits = 4)
 
 
 rica_satis =  dataas[447:462, c(3)]
 rica_satis
  # missing value for 2018 so (6.9976+ 7.0694)/2=7.0335
 
 
 Costarica<-c(7.0825, 7.4321, 6.8507, 7.6149, 7.2711, 7.2289, 7.2723, 7.1580, 7.2471, 6.8540, 7.1356, 7.2252, 7.1411, 6.9976,7.0335, 7.0694, 6.5820)
 
 peru_satis =  dataas[1586:1601, c(4)]
 peru_satis
 
 peruu<-c(4.81084537506104,5.21396207809448,5.12923097610474,5.51884698867798,5.61278533935547,5.89245748519897,
          5.82455730438232,5.78255748748779,5.86581563949585,5.57726335525513,5.70062875747681,5.71093654632568,
          5.6796612739563,5.99938154220581,5.83960008621216,5.55910015106201)
 
 round(peruu, digits = 4)
 
 
 peru_satis =  dataas[1586:1601, c(3)]
 peru_satis
 # missing value in 2018 is (5.8396+ 5.9994)/2=5.9168
 
 Peru<-c(4.8108, 5.2140, 5.1292, 5.5188, 5.6128, 5.8925, 5.8246, 5.7826, 5.8658, 5.5773, 5.7006, 5.7109, 5.6797, 5.9994,5.9168, 5.8396, 5.5591)
 
 
 cameroon_satis =  dataas[321:337, c(4)]
 cameroon_satis
 
 Cameroonn<-c( 3.85107207298279,4.34993934631348,4.2918004989624,4.7414083480835,4.55425691604614,4.43388509750366,
               4.24463415145874,4.27103805541992,4.24044132232666,5.03796482086182,4.81623220443726,5.07405138015747,
               5.25073766708374,4.93673753738403,5.24107789993286,5.14179992675781,5.04759979248047)
 
 round(Cameroonn, digits = 4)
 
 Cameroon<-c(3.8511, 4.3499, 4.2918, 4.7414, 4.5543, 4.4339, 4.2446, 4.2710, 4.2404, 5.0380, 4.8162, 5.0741, 5.2507, 4.9367, 5.2411, 5.1418,5.0476)
 
 
 
 germany_satis =  dataas[713:729, c(4)]
 germany_satis
 
 Germanyy<-c(6.61954975128174,6.41681957244873,6.52179002761841,6.64149332046509,6.72453117370605,6.62131214141846,
             6.70236206054688,6.9651250839233, 6.98421430587769,7.03713750839233,6.87376308441162,7.07432460784912,
             7.11836433410645,7.0354723930358,7.31189775466919,7.15450000762939,7.03410005569458)
 
 round(Germanyy, digits = 4)
 
 
 Germany<-c(6.6195, 6.4168, 6.5218, 6.6415, 6.7245, 6.6213, 6.7024, 6.9651, 6.9842, 7.0371, 6.8738, 7.0743, 7.1184, 7.0355, 7.3119, 7.1545,7.0341)
 
 
 
 lebanon_satis =  dataas[1119:1134, c(4)]
 lebanon_satis
 
 
 Lebanonn<-c(5.49124526977539,4.65310382843018,4.59485101699829,5.20599889755249,5.03189945220947,5.18757152557373,
             4.57256698608398,4.98328876495361,5.23302555084229,5.17197132110596,5.27072381973267,5.15398979187012,
             5.16718673706055,4.02421951293945,4.58379983901978,2.95530009269714)
 
 round(Lebanonn, digits = 4)
 
# lebanon_satis =  dataas[1119:1134, c(3)]
 #lebanon_satis
 #missing values in 2018 is (4.0242 +4.5838)/2=4.3040
 
 Lebanon<-c(5.4912, 4.6531, 4.5949, 5.2060, 5.0319, 5.1876, 4.5726, 4.9833, 5.2330, 5.1720, 5.2707, 5.1540, 5.1672, 4.0242,4.3040, 4.5838, 2.9553)
 

 honarus_satis =  dataas[803:818, c(4)]
 honarus_satis
 
 Hondaruss<-c( 5.39651966094971,5.09715414047241,5.42033100128174,6.03318929672241,5.86613130569458,4.96103143692017,
              4.60221815109253,4.7133584022522,5.05572605133057,4.84543657302856,5.64815473556519,6.01998567581177,
              5.90842390060425,5.93005132675171,5.91919994354248,6.02209997177124)
 
 
 round(Hondaruss, digits = 4)
 
 
 honarus_satis =  dataas[803:818, c(3)]
 honarus_satis
 # missing values in 2018 is (5.9301+ 5.9192)/2=5.9247
 
 Hondarus<-c( 5.3965, 5.0972, 5.4203, 6.0332, 5.8661, 4.9610, 4.6022, 4.7134, 5.0557, 4.8454, 5.6482, 6.0200, 5.9084, 5.9301,5.9247, 5.9192, 6.0221)
 
 
 paraguag_satis =  dataas[1571:1585, c(4)]
 paraguag_satis
 
 Paraguagg<-c(4.7300820350647,5.27246141433716,5.57006168365479,5.57614707946777,5.84117412567139,5.6770806312561,
              5.82005834579468,5.93624067306519,5.11864185333252,5.5597243309021,5.8013801574707,5.71329545974731,
              5.652625560760,5.65259981155396,5.57829999923706 )
 
 round(Paraguagg, digits = 4)
 
 paraguag_satis =  dataas[1571:1585, c(3)]
 paraguag_satis
 # missing values in 2016 and is (5.7133+ 5.6526)/2=5.6830
 # missing value in 2018 and is (5.6526 +5.6526)/2= 5.6526
 
 Paraguag<-c( 4.7301, 5.2725, 5.5701, 5.5761, 5.8412, 5.6771, 5.8201, 5.9362, 5.1186, 5.5597, 5.8014, 5.7133,5.6830, 5.6526,5.6526, 5.6526, 5.5783)

 
 
 
 # Here we decided to form a vectors of the various time period

 Years <- t(c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020)) # 
Years


## We created a vector related to each country

Brasil<-c(6.6368, 6.3207, 6.6914, 7.0008, 6.8373, 7.0378, 6.6600, 7.1403, 6.9810, 6.5469,6.3748, 6.3329, 6.1909, 6.4511, 6.1097, 6.3301,6.2928)
New_Zealand<-c(7.3050, 7.6042, 7.3812,7.3025, 7.2238, 7.1906, 7.2496, 7.2802,7.3059, 7.4181, 7.2257, 7.3272, 7.3703, 7.2052, 7.2574, 7.2766, 7.1998)
Canada<-c(7.4180, 7.4818, 7.4856, 7.4878, 7.6503, 7.4261, 7.4151, 7.5938, 7.3043, 7.4128, 7.2448, 7.4149, 7.1755, 7.1091,7.0249, 7.1033,7.0251)
Japan<-c(6.5158, 6.2382, 5.9107, 5.8450, 6.0568, 6.2628, 5.9682, 5.9594, 5.9226, 5.8797, 5.9547, 5.9107,5.7936, 5.9080, 6.1180, 5.9405,6.0389)
Portugal<-c(5.4052,5.5611, 5.7170,5.4056, 5.0945, 5.2200, 4.9940, 5.1577, 5.1269, 5.0809, 5.4466, 5.7115, 5.9198, 6.0955, 5.7678,5.9290, 6.0163)

Benine<-c(3.3298,3.49845, 3.6671,3.7687,3.7687, 3.8703, 3.1935, 3.4794, 3.3474, 3.6247, 4.0074, 4.8532, 5.8198, 4.9764, 4.4077, 5.0452, 4.6232)
Denmark<-c(8.0189, 7.8342, 7.9709, 7.6834, 7.7705, 7.7882, 7.5199, 7.5886, 7.5076, 7.5144, 7.5578, 7.5937, 7.6488, 7.6930, 7.5146, 7.6195, 7.6362)
India<-c(5.3483, 5.0268, 5.1458, 4.5215, 4.9893, 4.6349, 4.7201, 4.4278, 4.4244, 4.3421, 4.1792, 4.0461, 3.8181, 3.2488, 4.2253, 3.8189,3.7771)
USA<-c(7.1818, 7.5127, 7.2804, 7.1580, 7.1636, 7.1151, 7.0262, 7.2493, 7.1511, 6.8639, 6.8036, 6.9918, 6.8827, 6.9437, 7.0281, 6.9515, 6.9768)
Argentina<-c(6.3129, 6.0732, 5.9610, 6.4241, 6.4411, 6.7758, 6.4684, 6.5823, 6.6711, 6.6971,6.4272, 6.0393, 5.7928, 6.0856, 5.9006, 5.9293,5.9670)
Austrial<-c(7.3407, 7.2854, 7.2538,7.3519, 7.4500, 7.4056, 7.1956, 7.3642, 7.2886, 7.3091, 7.2501, 7.2570, 7.1770, 7.2340, 7.1374, 7.1835, 7.1621)

Bostuwana<-c(4.7394,5.0953, 5.4511, 3.5530,4.5021, 3.5199, 4.8359, 4.1283, 4.0312, 3.7620, 3.4989, 3.5049, 3.4614, 3.4711,3.4688, 3.4665, 3.4711)
Estonia<-c(5.3711, 5.3320, 5.4519, 5.1377, 5.3123, 5.4868, 5.3639, 5.3674, 5.5560, 5.6289, 5.6497, 5.9384, 6.0913, 6.0346, 6.4526, 6.1888, 6.3408)
Indonisia<-c( 4.9470, 5.1012, 4.8153, 5.4724, 5.4573, 5.1726, 5.3678, 5.2922, 5.5974, 5.0428, 5.1363, 5.0984, 5.3403, 5.3465,5.3434, 5.3445, 5.2396)
Mexico<-c( 6.5807, 6.5254, 6.8290, 6.9628, 6.8024, 6.9095, 7.3202, 7.4425, 6.6798, 6.2363, 6.8242, 6.4103, 6.5496, 6.4319, 5.9642, 6.3168,6.1276)
Colombia<-c( 6.0249, 6.1384, 6.1684, 6.2716, 6.4081, 6.4640, 6.3749, 6.6066, 6.4488, 6.3876, 6.2337, 6.1573, 5.9835, 6.3503, 5.7092, 6.0124,  5.7806)



Burkinafasso <-c(3.8015, 4.0171, 3.8464, 3.941, 4.0356, 4.7854, 3.9550, 3.3259, 3.4813, 4.4189, 4.2056, 4.6469, 4.9272, 4.7409,4.6214, 4.8338, 4.6705)
Franch<-c(7.0934, 6.5827, 7.0081, 6.2835, 6.7979, 6.9592, 6.6494, 6.6671, 6.4669, 6.3576, 6.4752, 6.6352, 6.6659, 6.6896, 6.7141, 6.6899, 6.6867)
Kazakstan<-c(5.4759, 5.7186, 5.8864, 5.3826, 5.5143, 5.7357, 5.7595, 5.8355, 5.9701, 5.9500, 5.5336, 5.8824, 6.0076, 6.2723, 6.1683, 6.1518,6.2341)
Costarica<-c(7.0825, 7.4321, 6.8507, 7.6149, 7.2711, 7.2289, 7.2723, 7.1580, 7.2471, 6.8540, 7.1356, 7.2252, 7.1411, 6.9976,7.0335, 7.0694, 6.5820)
Peru<-c(4.8108, 5.2140, 5.1292, 5.5188, 5.6128, 5.8925, 5.8246, 5.7826, 5.8658, 5.5773, 5.7006, 5.7109, 5.6797, 5.9994,5.9168, 5.8396, 5.5591)



Cameroon<-c(3.8511, 4.3499, 4.2918, 4.7414, 4.5543, 4.4339, 4.2446, 4.2710, 4.2404, 5.0380, 4.8162, 5.0741, 5.2507, 4.9367, 5.2411, 5.1418,5.0476)
Germany<-c(6.6195, 6.4168, 6.5218, 6.6415, 6.7245, 6.6213, 6.7024, 6.9651, 6.9842, 7.0371, 6.8738, 7.0743, 7.1184, 7.0355, 7.3119, 7.1545,7.0341)
Lebanon<-c(5.4912, 4.6531, 4.5949, 5.2060, 5.0319, 5.1876, 4.5726, 4.9833, 5.2330, 5.1720, 5.2707, 5.1540, 5.1672, 4.0242,4.3040, 4.5838, 2.9553)
Hondarus<-c( 5.3965, 5.0972, 5.4203, 6.0332, 5.8661, 4.9610, 4.6022, 4.7134, 5.0557, 4.8454, 5.6482, 6.0200, 5.9084, 5.9301,5.9247, 5.9192, 6.0221)
Paraguag<-c( 4.7301, 5.2725, 5.5701, 5.5761, 5.8412, 5.6771, 5.8201, 5.9362, 5.1186, 5.5597, 5.8014, 5.7133,5.6830, 5.6526,5.6526, 5.6526, 5.5783)













##################################################
#################################################
# DESCRIPTIVE RESULTS
# 4.1)  Evolution of Happiness for Portugal ?
#
################################################
################################################



por_graph = plot(por_year_unlist,por_satis_unlist, type = "o",main = "Life Satisfaction in Portugal over time",
                 xlab = "years",ylab = "Life Satisfaction",col = "blue")  # We used the plot function to do  that.
por_graph



#####################################################
#####################################################
# DESCRIPTIVE ANALYSIS RESULTS
# 4.2) What are the countries that most change ?
#
####################################################
####################################################



#We used the plot function in order to see the life satisfaction index trend in other countries.

plot(por_year_unlist,por_satis_unlist, type = "o",main = "Life Satisfaction over time in different countries",
     xlab = "years",ylab = "Life Satisfaction",col = "blue",pch = 17, ylim=c(3,8))

points(ghana_year_unlist,ghana_satis_unlist, type = "o",col = "red",pch = 16)

points(brasil_year_unlist,brasil_satis_unlist, type = "o",col = "green",pch = 15)

points(japan_year_unlist,japan_satis_unlist, type = "o",col = "purple",pch = 14)

points(canada_year_unlist,canada_satis_unlist, type = "o",col = "pink",pch = 18)

points(newzealand_year_unlist,newzealand_satis_unlist, type = "o",col = "black",pch = 19)

legend( "bottomright",legend=c( "Portugal", "Ghana",  "Brasil",  "Japan",  "Canada",  "Newzealand"), 
        col=c("blue","red","green", "orange",  "pink", "black"), pch=20 )










#####################################################
#####################################################
# EXPLORATORY ANALYSIS RESULTS
# 4.2) what are the countries that most changed ?
#
####################################################
####################################################

## We created a data frame that contain all the countries and Years as df

df <- data.frame(Years = c(2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020), 
                 Ghana=c(4.5350, 5.2201, 4.9651, 4.1977, 4.6063, 7.0378, 6.6600, 7.1403, 6.9810,6.5469, 6.3748, 6.3329, 5.0037, 4.9668, 5.3195, 5.08804, 4.8720),
                 Brasil=c(6.6368, 6.3207, 6.6914, 7.0008, 6.8373, 7.0378, 6.6600, 7.1403, 6.9810, 6.5469,6.3748, 6.3329, 6.1909, 6.4511, 6.1097, 6.3301,6.2928),
                 New_Zealand=c(7.3050, 7.6042, 7.3812,7.3025, 7.2238, 7.1906, 7.2496, 7.2802,7.3059, 7.4181, 7.2257, 7.3272, 7.3703, 7.2052, 7.2574, 7.2766, 7.1998),
                 Canada=c(7.4180, 7.4818, 7.4856, 7.4878, 7.6503, 7.4261, 7.4151, 7.5938, 7.3043, 7.4128, 7.2448, 7.4149, 7.1755, 7.1091,7.0249, 7.1033,7.0251),
                 Japan=c(6.5158, 6.2382, 5.9107, 5.8450, 6.0568, 6.2628, 5.9682, 5.9594, 5.9226, 5.8797, 5.9547, 5.9107,5.7936, 5.9080, 6.1180, 5.9405,6.0389),
                 Portugal=c(5.4052,5.5611, 5.7170,5.4056, 5.0945, 5.2200, 4.9940, 5.1577, 5.1269, 5.0809, 5.4466, 5.7115, 5.9198, 6.0955, 5.7678,5.9290, 6.0163),
                 Benine=c(3.3298,3.49845, 3.6671,3.7687,3.7687, 3.8703, 3.1935, 3.4794, 3.3474, 3.6247, 4.0074, 4.8532, 5.8198, 4.9764, 4.4077, 5.0452, 4.6232),
                 Denmark=c(8.0189, 7.8342, 7.9709, 7.6834, 7.7705, 7.7882, 7.5199, 7.5886, 7.5076, 7.5144, 7.5578, 7.5937, 7.6488, 7.6930, 7.5146, 7.6195, 7.6362),
                 India=c(5.3483, 5.0268, 5.1458, 4.5215, 4.9893, 4.6349, 4.7201, 4.4278, 4.4244, 4.3421, 4.1792, 4.0461, 3.8181, 3.2488, 4.2253, 3.8189,3.7771),
                 USA=c(7.1818, 7.5127, 7.2804, 7.1580, 7.1636, 7.1151, 7.0262, 7.2493, 7.1511, 6.8639, 6.8036, 6.9918, 6.8827, 6.9437, 7.0281, 6.9515, 6.9768),
                 Argentina=c(6.3129, 6.0732, 5.9610, 6.4241, 6.4411, 6.7758, 6.4684, 6.5823, 6.6711, 6.6971,6.4272, 6.0393, 5.7928, 6.0856, 5.9006, 5.9293,5.9670),
                 Austrial=c(7.3407, 7.2854, 7.2538,7.3519, 7.4500, 7.4056, 7.1956, 7.3642, 7.2886, 7.3091, 7.2501, 7.2570, 7.1770, 7.2340, 7.1374, 7.1835, 7.1621),
                 Bostuwana=c(4.7394,5.0953, 5.4511, 3.5530,4.5021, 3.5199, 4.8359, 4.1283, 4.0312, 3.7620, 3.4989, 3.5049, 3.4614, 3.4711,3.4688, 3.4665, 3.4711),
                 Estonia=c(5.3711, 5.3320, 5.4519, 5.1377, 5.3123, 5.4868, 5.3639, 5.3674, 5.5560, 5.6289, 5.6497, 5.9384, 6.0913, 6.0346, 6.4526, 6.1888, 6.3408),
                 Indonisia=c( 4.9470, 5.1012, 4.8153, 5.4724, 5.4573, 5.1726, 5.3678, 5.2922, 5.5974, 5.0428, 5.1363, 5.0984, 5.3403, 5.3465,5.3434, 5.3445, 5.2396),
                 Mexico=c( 6.5807, 6.5254, 6.8290, 6.9628, 6.8024, 6.9095, 7.3202, 7.4425, 6.6798, 6.2363, 6.8242, 6.4103, 6.5496, 6.4319, 5.9642, 6.3168,6.1276),
                 Colombia=c( 6.0249, 6.1384, 6.1684, 6.2716, 6.4081, 6.4640, 6.3749, 6.6066, 6.4488, 6.3876, 6.2337, 6.1573, 5.9835, 6.3503, 5.7092, 6.0124,  5.7806),
                 Burkinafasso =c(3.8015, 4.0171, 3.8464, 3.941, 4.0356, 4.7854, 3.9550, 3.3259, 3.4813, 4.4189, 4.2056, 4.6469, 4.9272, 4.7409,4.6214, 4.8338, 4.6705),
                 Franch=c(7.0934, 6.5827, 7.0081, 6.2835, 6.7979, 6.9592, 6.6494, 6.6671, 6.4669, 6.3576, 6.4752, 6.6352, 6.6659, 6.6896, 6.7141, 6.6899, 6.6867),
                 Kazakstan=c(5.4759, 5.7186, 5.8864, 5.3826, 5.5143, 5.7357, 5.7595, 5.8355, 5.9701, 5.9500, 5.5336, 5.8824, 6.0076, 6.2723, 6.1683, 6.1518,6.2341),
                 Costarica=c(7.0825, 7.4321, 6.8507, 7.6149, 7.2711, 7.2289, 7.2723, 7.1580, 7.2471, 6.8540, 7.1356, 7.2252, 7.1411, 6.9976,7.0335, 7.0694, 6.5820),
                 Peru=c(4.8108, 5.2140, 5.1292, 5.5188, 5.6128, 5.8925, 5.8246, 5.7826, 5.8658, 5.5773, 5.7006, 5.7109, 5.6797, 5.9994,5.9168, 5.8396, 5.5591),
                 Cameroon=c(3.8511, 4.3499, 4.2918, 4.7414, 4.5543, 4.4339, 4.2446, 4.2710, 4.2404, 5.0380, 4.8162, 5.0741, 5.2507, 4.9367, 5.2411, 5.1418,5.0476),
                 Germany=c(6.6195, 6.4168, 6.5218, 6.6415, 6.7245, 6.6213, 6.7024, 6.9651, 6.9842, 7.0371, 6.8738, 7.0743, 7.1184, 7.0355, 7.3119, 7.1545,7.0341),
                 Lebanon=c(5.4912, 4.6531, 4.5949, 5.2060, 5.0319, 5.1876, 4.5726, 4.9833, 5.2330, 5.1720, 5.2707, 5.1540, 5.1672, 4.0242,4.3040, 4.5838, 2.9553),
                 Hondarus=c( 5.3965, 5.0972, 5.4203, 6.0332, 5.8661, 4.9610, 4.6022, 4.7134, 5.0557, 4.8454, 5.6482, 6.0200, 5.9084, 5.9301,5.9247, 5.9192, 6.0221),
                 Paraguag=c( 4.7301, 5.2725, 5.5701, 5.5761, 5.8412, 5.6771, 5.8201, 5.9362, 5.1186, 5.5597, 5.8014, 5.7133,5.6830, 5.6526,5.6526, 5.6526, 5.5783)
)

df=print (t(df))   # We transposed it so that the countries will be in a rows 
df





## We created another data frame that do not contain Years
## We want to find the correlation between the countries 
## If the average correlation is greater than 0.33 or less than -0.33 we can do pCA for the data
## We don't want to have a principal component related to Years but the countries

dfff <- data.frame(Ghana=c(4.5350, 5.2201, 4.9651, 4.1977, 4.6063, 7.0378, 6.6600, 7.1403, 6.9810,6.5469, 6.3748, 6.3329, 5.0037, 4.9668, 5.3195, 5.08804, 4.8720),
                 Brasil=c(6.6368, 6.3207, 6.6914, 7.0008, 6.8373, 7.0378, 6.6600, 7.1403, 6.9810, 6.5469,6.3748, 6.3329, 6.1909, 6.4511, 6.1097, 6.3301,6.2928),
                 New_Zealand=c(7.3050, 7.6042, 7.3812,7.3025, 7.2238, 7.1906, 7.2496, 7.2802,7.3059, 7.4181, 7.2257, 7.3272, 7.3703, 7.2052, 7.2574, 7.2766, 7.1998),
                 Canada=c(7.4180, 7.4818, 7.4856, 7.4878, 7.6503, 7.4261, 7.4151, 7.5938, 7.3043, 7.4128, 7.2448, 7.4149, 7.1755, 7.1091,7.0249, 7.1033,7.0251),
                 Japan=c(6.5158, 6.2382, 5.9107, 5.8450, 6.0568, 6.2628, 5.9682, 5.9594, 5.9226, 5.8797, 5.9547, 5.9107,5.7936, 5.9080, 6.1180, 5.9405,6.0389),
                 Portugal=c(5.4052,5.5611, 5.7170,5.4056, 5.0945, 5.2200, 4.9940, 5.1577, 5.1269, 5.0809, 5.4466, 5.7115, 5.9198, 6.0955, 5.7678,5.9290, 6.0163),
                 Benine=c(3.3298,3.49845, 3.6671,3.7687,3.7687, 3.8703, 3.1935, 3.4794, 3.3474, 3.6247, 4.0074, 4.8532, 5.8198, 4.9764, 4.4077, 5.0452, 4.6232),
                 Denmark=c(8.0189, 7.8342, 7.9709, 7.6834, 7.7705, 7.7882, 7.5199, 7.5886, 7.5076, 7.5144, 7.5578, 7.5937, 7.6488, 7.6930, 7.5146, 7.6195, 7.6362),
                 India=c(5.3483, 5.0268, 5.1458, 4.5215, 4.9893, 4.6349, 4.7201, 4.4278, 4.4244, 4.3421, 4.1792, 4.0461, 3.8181, 3.2488, 4.2253, 3.8189,3.7771),
                 USA=c(7.1818, 7.5127, 7.2804, 7.1580, 7.1636, 7.1151, 7.0262, 7.2493, 7.1511, 6.8639, 6.8036, 6.9918, 6.8827, 6.9437, 7.0281, 6.9515, 6.9768),
                 Argentina=c(6.3129, 6.0732, 5.9610, 6.4241, 6.4411, 6.7758, 6.4684, 6.5823, 6.6711, 6.6971,6.4272, 6.0393, 5.7928, 6.0856, 5.9006, 5.9293,5.9670),
                 Austrial=c(7.3407, 7.2854, 7.2538,7.3519, 7.4500, 7.4056, 7.1956, 7.3642, 7.2886, 7.3091, 7.2501, 7.2570, 7.1770, 7.2340, 7.1374, 7.1835, 7.1621),
                 Bostuwana=c(4.7394,5.0953, 5.4511, 3.5530,4.5021, 3.5199, 4.8359, 4.1283, 4.0312, 3.7620, 3.4989, 3.5049, 3.4614, 3.4711,3.4688, 3.4665, 3.4711),
                 Estonia=c(5.3711, 5.3320, 5.4519, 5.1377, 5.3123, 5.4868, 5.3639, 5.3674, 5.5560, 5.6289, 5.6497, 5.9384, 6.0913, 6.0346, 6.4526, 6.1888, 6.3408),
                 Indonisia=c( 4.9470, 5.1012, 4.8153, 5.4724, 5.4573, 5.1726, 5.3678, 5.2922, 5.5974, 5.0428, 5.1363, 5.0984, 5.3403, 5.3465,5.3434, 5.3445, 5.2396),
                 Mexico=c( 6.5807, 6.5254, 6.8290, 6.9628, 6.8024, 6.9095, 7.3202, 7.4425, 6.6798, 6.2363, 6.8242, 6.4103, 6.5496, 6.4319, 5.9642, 6.3168,6.1276),
                 Colombia=c( 6.0249, 6.1384, 6.1684, 6.2716, 6.4081, 6.4640, 6.3749, 6.6066, 6.4488, 6.3876, 6.2337, 6.1573, 5.9835, 6.3503, 5.7092, 6.0124,  5.7806),
                 Burkinafasso =c(3.8015, 4.0171, 3.8464, 3.941, 4.0356, 4.7854, 3.9550, 3.3259, 3.4813, 4.4189, 4.2056, 4.6469, 4.9272, 4.7409,4.6214, 4.8338, 4.6705),
                 Franch=c(7.0934, 6.5827, 7.0081, 6.2835, 6.7979, 6.9592, 6.6494, 6.6671, 6.4669, 6.3576, 6.4752, 6.6352, 6.6659, 6.6896, 6.7141, 6.6899, 6.6867),
                 Kazakstan=c(5.4759, 5.7186, 5.8864, 5.3826, 5.5143, 5.7357, 5.7595, 5.8355, 5.9701, 5.9500, 5.5336, 5.8824, 6.0076, 6.2723, 6.1683, 6.1518,6.2341),
                 Costarica=c(7.0825, 7.4321, 6.8507, 7.6149, 7.2711, 7.2289, 7.2723, 7.1580, 7.2471, 6.8540, 7.1356, 7.2252, 7.1411, 6.9976,7.0335, 7.0694, 6.5820),
                 Peru=c(4.8108, 5.2140, 5.1292, 5.5188, 5.6128, 5.8925, 5.8246, 5.7826, 5.8658, 5.5773, 5.7006, 5.7109, 5.6797, 5.9994,5.9168, 5.8396, 5.5591),
                 Cameroon=c(3.8511, 4.3499, 4.2918, 4.7414, 4.5543, 4.4339, 4.2446, 4.2710, 4.2404, 5.0380, 4.8162, 5.0741, 5.2507, 4.9367, 5.2411, 5.1418,5.0476),
                 Germany=c(6.6195, 6.4168, 6.5218, 6.6415, 6.7245, 6.6213, 6.7024, 6.9651, 6.9842, 7.0371, 6.8738, 7.0743, 7.1184, 7.0355, 7.3119, 7.1545,7.0341),
                 Lebanon=c(5.4912, 4.6531, 4.5949, 5.2060, 5.0319, 5.1876, 4.5726, 4.9833, 5.2330, 5.1720, 5.2707, 5.1540, 5.1672, 4.0242,4.3040, 4.5838, 2.9553),
                 Hondarus=c( 5.3965, 5.0972, 5.4203, 6.0332, 5.8661, 4.9610, 4.6022, 4.7134, 5.0557, 4.8454, 5.6482, 6.0200, 5.9084, 5.9301,5.9247, 5.9192, 6.0221),
                 Paraguag=c( 4.7301, 5.2725, 5.5701, 5.5761, 5.8412, 5.6771, 5.8201, 5.9362, 5.1186, 5.5597, 5.8014, 5.7133,5.6830, 5.6526,5.6526, 5.6526, 5.5783)
)


dff=print (t(dfff))
dff      ## The name of the new data frame with out years






dadosx<-dff[,-1]       # we rename the data as dadosx 
dadosx


cor(dadosx)    #We find the correlation of the variables

mean(cor(dadosx)) # We compute the means of the correlation and we obtained 88% which is very high and hence we do PCA


res1=prcomp(dadosx)   # Here we obtained the Principle component of the variables
res1
( sum.res1=summary(res1) )




res1$x

pca=princomp(dadosx)
pca

pca$loadings   # Here we check if the principal component obtained the essence of the original variables

pca$scores   # Here we check if the variables are linear indepent





par(mfrow=c(1,2))
plot(res1$x[,1],res1$x[,2], type="n", xlab=paste(" CP1  (", (round(100*sum.res1$importance[2,1],digits=1)), " % )"),
     ylab=paste(" CP2  (", (round(100*sum.res1$importance[2,2],digits=1)), " % )"), main="HCL (normalise data) Happiness.Cantril.Ladder.csv")
text(res1$x[,1:2],lab=rownames(dadosx))  # Here we plot the graph




prcomp(dadosx, scale=TRUE)   # Here we show the Pc's of the normalised data


a=prcomp(dadosx)   # Here ww aim to construct the Biplot 
b=summary(a)



biplot(a, col=c('blue', 'red'), choices=1:2, pch=15, cex=0.59,cex.axis=0.7,arrow.len = 0.05,xlab=paste(" CP1  (", (round(100*b$importance[2,1],digits=1)), " % )"),
       ylab=paste(" CP2  (", (round(100*b$importance[2,2],digits=1)), " % )"),var.axes=TRUE, scale=1,  main="PCA Results")





######################################
# K means Clustering
######################################
# let plot the proportion of the variance and the number of pca
#library(factoextra)

install.packages("factoextra")
library(factoextra)
library(cluster)
#install.packages("caret", dependencies=c("Depends", "Suggests"))
#library(caret)

fviz_nbclust(df, kmeans, method = "wss")



#calculate gap statistic based on number of clusters
gap_stat <- clusGap(df,
                    FUN = kmeans,
                    nstart = 25,
                    K.max = 10,
                    B = 50)

#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)



#make this example reproducible
set.seed(1)

#perform k-means clustering with k = 4 clusters
km <- kmeans(df, centers = 6, nstart = 25)

#view results
km


#plot results of final k-means model
fviz_cluster(km, data = df)



dados2G<-kmeans(dadosx, 6)

dados2G

#Visualisation of K means in another graphical way
str(dados2G)
a=prcomp(dadosx)
plot(a$x[,1:16], col = dados2G$cluster, pch=19, main="k-means Clustering")






######################################
# Colored Dendrogram Clustering
######################################


# The code that enables us to veiw a colored dendrogram clusters


"._a2r_hclu"       <- NULL # to receive an hclust object when 
# A2Rplot.hclust is called

"._a2r_counter"       <- NA # a counter used in A2Rplot.hclust
"._a2r_height_cut"    <- NA

"._a2r_envir"         <- NA
"._a2r_group"         <- NA


#===============================================================================
"A2Rplot" <- function(x,...){
  UseMethod("A2Rplot")
}
#===============================================================================
"A2Rplot.default" <- function(x,...){
  plot(x,...)
}
#===============================================================================
"A2Rplot.hclust" <- function(
    x ,             # an hclust object to draw
    k        = 2,   # the number of groups
    col.up   = "black",
    col.down = rainbow(k),
    lty.up   = 2,
    lty.down = 1,
    lwd.up   = 1,
    lwd.down = 2,
    type     = c("rectangle","triangle"),
    knot.pos = c("mean","bary","left","right","random"),
    criteria,
    fact.sup,
    show.labels=TRUE,
    only.tree=FALSE,
    main     = paste("Colored Dendrogram (",k," groups)"),
    boxes    = TRUE,
    members,
    ...
){
  
  if(missing(members)) members <- NULL
  opar <- par(no.readonly=TRUE)
  knot.pos <- match.arg(knot.pos)
  type     <- match.arg(type)
  # tests
  if(k<2) 
    stop("k must be at least 2")  
  
  ._a2r_counter    <<- 0
  ._a2r_hclu       <<- x
  
  ._a2r_envir      <<- environment()
  nn <- length(x$order) - 1
  
  ._a2r_height_cut <<- mean(x$height[nn-k+1:2])
  ._a2r_group      <<- 0
  
  n.indiv   <- length(x$order)
  groups.o  <- cutree.order(x, k=k)[x$order]
  
  bottom <- if(is.null(members)) 0 else x$height[nn] * -.2 
  
  if(only.tree){
    if(is.null(members)) plot(0,type="n",xlim=c(0.5,n.indiv+.5), ylim=c(bottom,x$height[nn]), xaxs="i", axes=FALSE, xlab="",ylab="") 
    else                 plot(0,type="n",xlim=c(0.5,sum(members)+.5), ylim=c(bottom,x$height[nn]), xaxs="i", axes=FALSE, xlab="",ylab="")
    #call to the ** recursive function ** .rec.hclust
    .rec.hclust(nn, col=col.up, lty=lty.up, lwd=lwd.up)
    
    if(boxes){
      axis(2)
      box()
    }
    return(NULL)
  }
  
  # prepare the layout
  matlayout <- matrix(c(2,4,6,1,3,5), nc=2, nr=3)
  widths    <- c(1,9)
  heights   <- c(8,1,1)
  if(!show.labels){
    matlayout <- matrix(c(2,4,1,3), nc=2, nr=2)
    widths    <- c(1,9)
    heights   <- c(9,1)
  }
  if(!missing(fact.sup) ) {
    heights   <- c(8,1,1)
  }
  if(missing(criteria) & missing(fact.sup)){
    matlayout <- matrix(c(2,4,1,3), nc=2, nr=2)
    widths    <- c(1,9)
    heights   <- c(9,1)
    
  }
  layout(matlayout, width=widths, height=heights)
  
  
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ The tree (1)
  par(mar=c(0,0,3,4))
  if(is.null(members)) plot(0,type="n",xlim=c(0.5,n.indiv+.5), ylim=c(bottom,x$height[nn]), xaxs="i", axes=FALSE, xlab="",ylab="") 
  else plot(0,type="n",xlim=c(0.5,sum(members)+.5), ylim=c(bottom,x$height[nn]), xaxs="i", axes=FALSE, xlab="",ylab="") 
  #call to the ** recursive function ** .rec.hclust
  .rec.hclust(nn, col=col.up, lty=lty.up, lwd=lwd.up)
  title(main)
  if(boxes){
    box()
    axis(4)
  }
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Criteria (2)
  if(!missing(criteria)){
    par(mar=c(0,0,3,0))
    plot(0,
         type="n",
         xlim=range(criteria), 
         ylim=c(0,x$height[nn]), 
         axes=FALSE, 
         xlab="",
         ylab="")
    par(las=2)
    n.crit <- length(criteria)
    heights.cut <- ( tail(x$height,n.crit) + 
                       tail(x$height,n.crit+1)[-(n.crit+1)] ) / 2
    heights.cut <- rev(heights.cut)
    
    points(criteria   , heights.cut   , pch=21, bg="red", type="o")
    points(criteria[k-1], heights.cut[k-1], pch=21, cex=2, bg="blue", xpd=NA)
    if(boxes){
      axis(3)
      box()
    }
  }
  else{
    par(mar=c(0,0,3,0))
    plot(0,
         type="n",
         xlim=c(0,1), 
         ylim=c(0,1), 
         axes=FALSE, 
         xlab="",
         ylab="")
  }
  
  if(show.labels){
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Name of the observations (3)
    par(mar=c(0,0,0,4))
    par(srt=90)
    obs.labels <- toupper(substr(x$labels[x$order],1,6))
    if(is.null(members)) {
      plot(0,type="n",xlim=c(0.5,n.indiv+.5), ylim=c(0,1), xaxs="i", axes=FALSE, xlab="",ylab="") 
      text(1:n.indiv            , 0, obs.labels, pos=4, col=col.down[groups.o])
    }
    else{
      plot(0,type="n",xlim=c(0.5,sum(members)+.5), ylim=c(0,1), xaxs="i", axes=FALSE, xlab="",ylab="") 
      xo <-   members[x$order]
      text(cumsum(xo)-xo/2, 0, obs.labels, pos=4, col=col.down[groups.o])
    }
    par(srt=0)
    if(boxes){
      box()
    }
    
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Labels (4)
    par(mar=c(0,0,0,0))
    plot(0,type="n",xlim=c(0,1), ylim=c(0,1), xaxs="i", axes=FALSE, xlab="",ylab="") 
    text(.5,.5,"Labels")
    if(boxes){
      box()
    }
    
  }
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Quali (5,6)
  if(!missing(fact.sup)){
    quali  <- as.factor(fact.sup)[x$order]
    quanti <- as.numeric(quali)
    
    par(mar=c(1,0,0,4))
    n.levels <- length(levels(quali))
    plot(0,type="n",
         xlim=c(0.5,n.indiv+.5), 
         ylim=c(0,n.levels), 
         xaxs="i", yaxs="i",axes=FALSE, xlab="",ylab="") 
    
    rect(xleft    = (1:n.indiv)-.5,
         xright   = (1:n.indiv)+.5,
         ybottom  = quanti-1, 
         ytop     = quanti,
         col      = col.down[groups.o])
    par(las=1)
    axis(4, (1:n.levels)-.5,levels(quali), tick=FALSE)
    
    if(boxes){
      box()
    }
    
    
    par(mar=c(1,0,0,0))
    plot(0,type="n",xlim=c(0,1), ylim=c(0,1), xaxs="i", axes=FALSE, xlab="",ylab="") 
    text(.5,.5,deparse(substitute(fact.sup)))
    if(boxes){
      box()
    }
  }
  
  
  par(opar) # reset parameter
}

#===============================================================================

".rec.hclust" <- function(
    index, # index of the current tree to draw
    lwd = 1,
    lty = 1,
    col = "black"){
  
  members <- get('members', envir= ._a2r_envir) 
  bottom  <- get('bottom',  envir= ._a2r_envir) 
  if(index<0){ # it is a leaf
    if(is.null(members)){
      ._a2r_counter <<- ._a2r_counter + 1
      return(list( x = ._a2r_counter,
                   n = 1))       
    }
    else{
      cc <- ._a2r_counter
      mm <- members[-index]
      polygon(x  = c(cc, cc+mm/2, cc+mm),
              y  = c(bottom, 0, bottom),
              col= col, 
              border = col, 
              lwd=lwd)
      ._a2r_counter <<- ._a2r_counter + mm
      return(list(x = cc+mm/2,
                  n = mm))
    }
  }
  
  h.m   <- ._a2r_hclu$height[index]
  
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~ do left
  index.l  <- ._a2r_hclu$merge[index,1]
  
  h.l <- if(index.l<0) 0 else ._a2r_hclu$height[index.l]
  if(h.l<._a2r_height_cut & h.m > ._a2r_height_cut){
    ._a2r_group <<- ._a2r_group + 1
    col.l <- get("col.down",envir=._a2r_envir)[._a2r_group]
    lwd.l <- get("lwd.down",envir=._a2r_envir)
    lty.l <- get("lty.down",envir=._a2r_envir)
  }
  else{
    col.l <- col
    lwd.l <- lwd
    lty.l <- lty
  }
  out.l   <- .rec.hclust(index.l, col=col.l, lty=lty.l, lwd=lwd.l)
  x.l     <- out.l$x
  n.l     <- out.l$n
  
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~ do right
  index.r  <- ._a2r_hclu$merge[index,2]
  h.r <- if(index.r<0) 0 else ._a2r_hclu$height[index.r]
  if(h.r<._a2r_height_cut & h.m > ._a2r_height_cut){
    ._a2r_group <<- ._a2r_group + 1
    col.r <- get("col.down",envir=._a2r_envir)[._a2r_group]
    lwd.r <- get("lwd.down",envir=._a2r_envir)
    lty.r <- get("lty.down",envir=._a2r_envir)
  }
  else{
    col.r <- col
    lwd.r <- lwd
    lty.r <- lty
  }
  out.r   <- .rec.hclust(index.r, col=col.r, lty=lty.r, lwd=lwd.r)
  x.r     <- out.r$x
  n.r     <- out.r$n
  
  
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~ draw what you have to draw
  
  type <- get("type",envir=._a2r_envir)
  x.m  <- (x.r + x.l) / 2  
  n    <- n.r + n.l
  x.b  <- (n.r * x.r + n.l * x.l) / n
  
  
  knot.pos <- get("knot.pos",envir=._a2r_envir) 
  
  x <- switch(knot.pos,
              mean = x.m,
              left = x.l,
              right= x.r,
              random = x.l + runif(1)*(x.r-x.l),
              bary   = x.b)
  
  
  
  if(type=="rectangle"){
    segments(x0  = c(x.l, x.l, x.r),
             x1  = c(x.l, x.r, x.r),
             y0  = c(h.l, h.m, h.r),
             y1  = c(h.m, h.m, h.m),
             col = col,
             lty = lty,
             lwd = lwd)
  }
  if(type =="triangle"){
    segments(x0  = c(x.l, x.r),
             x1  = c(x  , x),
             y0  = c(h.l, h.r),
             y1  = c(h.m, h.m),
             col = col,
             lty = lty,
             lwd = lwd)
  }
  
  
  list(x=x,n=n)
}
#===============================================================================
"cutree.order" <- function(hclu, k=NULL, h=NULL){
  
  coupe <- cutree(hclu,k=k, h=h)
  
  coupe.or <- coupe[hclu$order]
  coupe.out<- rep(NA,length(coupe))
  j <-  1 #
  k <-  coupe.or[1]
  for(i in 1:length(coupe)){
    if(coupe.or[i]==k) next
    else{
      coupe.out[which(coupe==k)] <- j
      j <- j + 1
      k <- coupe.or[i]
    }
  }
  coupe.out[is.na(coupe.out)] <- j
  names(coupe.out) <- names(coupe)
  coupe.out
}
#===============================================================================





# colored dendrogram
op = par(bg = "#EFEFEF")
A2Rplot(hc, k = 6, boxes = FALSE, col.up = "gray50",
        col.down = c("#FF6B6B", "#4ECDC4", "#556270","#1B676B","#C44D58","#CDB380"))



### another method of obtained the results
Mdistancia<-dist(dadosx, method="euclidian")
hc = hclust(Mdistancia, method="complete")
plot(hc,hang=-1, col=c('blue', 'red'),main="Euclidean Distance")









###################################
#  Heirachical Clustering
###################################
Mdistancia<-dist(dadosx, method="euclidian")
hc = hclust(Mdistancia, method="complete")
plot(hc,hang=-1, col=c('blue', 'red'),main="Distancia euclideana, e vizinho-mais-afastado")

#NOTA: a medida de distancia em "method" pode ser:
# "euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski"
#NOTA: o criterio de agrega??o em "method" pode ser:
#"ward.D", "ward.D2", "single", "complete", "average", "mcquitty", "median", "centroid"



rect.hclust(hc,k=2)



G2=cutree(hc, 2)














 #install CRAN Task View for phylogenetics 
 install.packages('ctv')
 library('ctv')
 install.views('Phylogenetics')
update.views('Phylogenetics')






######################################
# K means Clustering
######################################
# let plot the proportion of the variance and the number of pca
#library(factoextra)

install.packages("factoextra")
library(factoextra)
library(cluster)
#install.packages("caret", dependencies=c("Depends", "Suggests"))
#library(caret)

fviz_nbclust(df, kmeans, method = "wss")



#calculate gap statistic based on number of clusters
gap_stat <- clusGap(df,
                    FUN = kmeans,
                    nstart = 25,
                    K.max = 10,
                    B = 50)

#plot number of clusters vs. gap statistic
fviz_gap_stat(gap_stat)



#make this example reproducible
set.seed(1)

#perform k-means clustering with k = 4 clusters
km <- kmeans(df, centers = 6, nstart = 25)

#view results
km


#plot results of final k-means model
fviz_cluster(km, data = df)





rect.hclust(hc,k=2)



G2=cutree(hc, 2)



# Visualisation of silhouette  
install.packages("cluster")
library(cluster)
D <- daisy(dadosx)
plot(silhouette(G2$cluster, D),col= c("blue", "purple"))




